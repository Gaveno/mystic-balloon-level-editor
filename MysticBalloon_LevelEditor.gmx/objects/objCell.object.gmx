<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprWalls3</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_index = 0;
image_speed = 0;
height = 0;
width = 0;
length = 0;
control = noone;
objIndex = -1; // not an object
/*
object indexes:
-1  -   not an object
 0  -   start position
 1  -   finish position
 2  -   walker
 3  -   fan
 4  -   spikes
*/   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_index = solid;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>solid = false;
objIndex = -1;
depth = 0;
height = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objCursor.type == -1) {
    solid = true;
    height = 0;
    with objCell {
        cellGetSolid();
    }
    depth = 0;
}
else {
    objIndex = objCursor.type;
    if (objIndex == 3 and !keyboard_check(vk_control)) {
        height = get_integer("Enter height in cells:", 3);
        depth = -1;
        solid = true;
    }
    else if (objIndex == 3 and keyboard_check(vk_control)) {
        width = get_integer("Enter width in cells: (negative for left)", 3);
        depth = -1;
        solid = true;
    }
    else if (objIndex == 4) {
        length = get_integer("Enter length of spikes in cells:", 3);
        depth = -1;
        solid = false;
    }
    else {
        solid = false;
        height = 0;
        depth = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objIndex != -1)
{
    draw_set_font(fontMicro);
    draw_set_color(c_white);
    var text = getIndexName(objIndex + 1);
    draw_rectangle(x + 12 - (string_width(text) / 2), y + 12 - (string_height(text) / 2),
        x + 12 + (string_width(text) / 2), y + 12 + (string_height(text) / 2), false);
    draw_set_color(c_black);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(x + 12, y + 12, text);
    draw_set_alpha(0.5);
    draw_set_color(c_yellow);
    if (height &gt; 0)
        draw_rectangle(x, y - height * (objControl.gridCellH), x + sprite_width, y, false);
    else if (width &gt; 0)
        draw_rectangle(x + sprite_width, y, x + sprite_width + width * objControl.gridCellW, y + sprite_height, false);
    else if (width &lt; 0)
        draw_rectangle(x + width * objControl.gridCellW, y, x, y + sprite_height, false);
    if (length &gt; 0) {
        draw_set_color(c_green)
        if (!place_free(x, y-24) || !place_free(x, y + 24))
            draw_rectangle(x + sprite_width, y, x + sprite_width + length * objControl.gridCellW, y + sprite_height, false);
        else
            draw_rectangle(x, y + sprite_height, x + sprite_width, y + sprite_height + length * objControl.gridCellH, false);
            
    }
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objIndex == -1) {
    if (!solid) {
        draw_sprite(sprCell, 0, x, y);
    }
    else {
        draw_self();
    }
}
else {
    switch (objIndex)
    {
        case 2: draw_sprite(sprWalker, 0, x, y);
        break;
        case 3: 
        if (height &gt; 0) draw_sprite(sprFan, 0, x, y);
        else if (width &gt; 0) draw_sprite(sprFan, 1, x, y);
        else draw_sprite(sprFan, 2, x, y);
        break;
        case 5: draw_sprite(sprCoin, 0, x, y);
        break;
        case 6: draw_sprite(sprKey, 0, x, y);
        break;
        default: draw_sprite(sprObject, 0, x, y);
    }
    /*draw_set_font(fontMicro);
    draw_set_color(c_white);
    var text = getIndexName(objIndex + 1);
    draw_rectangle(x + 12 - (string_width(text) / 2), y + 12 - (string_height(text) / 2),
        x + 12 + (string_width(text) / 2), y + 12 + (string_height(text) / 2), false);
    draw_set_color(c_black);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_text(x + 12, y + 12, text);
    draw_set_alpha(0.5);
    draw_set_color(c_yellow);
    draw_rectangle(x, y - height * (objControl.gridCellH), x + sprite_width, y, false);
    draw_set_alpha(1);*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
