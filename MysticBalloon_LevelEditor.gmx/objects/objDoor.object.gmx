<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>objParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

destX = 0;
destY = 0;
destRoom = 0;
canScaleX = true;
canScaleY = true;

butDOK = noone;
butDCancel = noone;
butDDestRoom = noone;
butDDestX = noone;
butDDestY = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (objControl.cursorCommand &gt; 0)
    exit;
    
if (mouse_check_button_released(mb_left) &amp;&amp; point_in_rectangle(mouse_x, mouse_y, x,y,x+W,y+H))
{
    if (global.objSelected == noone)
        global.objSelected = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
depth = -(y + 128);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Check Door Buttons
if (instance_exists(objControl.guiCDoor)){

//show_debug_message("GUI Enemy Create Active");
if (guiCheckButton(butDOK))
{
    guiDestroy(objControl.guiCDoor);
    objControl.guiFocus = objControl.guiMain;
    //show_debug_message("Pressed Okay");
}

if (guiCheckButton(butDCancel))
{
    guiDestroy(objControl.guiCDoor);
    objControl.guiFocus = objControl.guiMain;
    global.objSelected = noone;
    instance_destroy();
    //show_debug_message("Pressed Cancel");
}

if (guiCheckButton(butDDestRoom))
{
    butDDestRoom.destroom = get_integer("Enter the destination room index:",0);
    butDDestRoom.myText = string(butDDestRoom.destroom);
    butDDestRoom.myStateChange = true;
    destRoom = butDDestRoom.destroom;
    //show_debug_message("Pressed Dest Room");
}

if (guiCheckButton(butDDestX))
{
    butDDestX.destx = get_integer("Enter the player's destination X#when entering door:",0);
    butDDestX.myText = string(butDDestX.destx);
    butDDestX.myStateChange = true;
    destX = butDDestX.destx;
}

if (guiCheckButton(butDDestY))
{
    butDDestY.desty = get_integer("Enter the player's destination Y#when entering door:",0);
    butDDestY.myText = string(butDDestY.desty);
    butDDestY.myStateChange = true;
    destY = butDDestY.desty;
}

} //end
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.objSelected == id)
{
    objControl.guiCDoor = guiLoad("CreateDoor.gui", min(mouse_x, room_width - 200), min(mouse_y, room_height - 200));
    objControl.guiCDoor.depth -= 1000;
    objControl.guiFocus = objControl.guiCDoor;
    
    butDOK = guiGetObject(objControl.guiCDoor, 1);
    butDCancel = guiGetObject(objControl.guiCDoor, 2);
    //butDCancel.visible = false;
    butDCancel.myText = "Delete";
    butDDestRoom = guiGetObject(objControl.guiCDoor, 4);
    butDDestRoom.destroom = destRoom;
    butDDestRoom.myText = string(destRoom);
    butDDestX = guiGetObject(objControl.guiCDoor, 6);
    butDDestX.destx = destX;
    butDDestX.myText = string(destX);
    butDDestY = guiGetObject(objControl.guiCDoor, 8);
    butDDestY.desty = destY;
    butDDestY.myText = string(destY);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.objSelected == id)
    event_inherited();
else
    draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
