<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>guiSaveLoad = guiLoad("saveloadexport.gui", 0, 0);
guiCursor = guiLoad("cursortype.gui", guiSaveLoad.myWidth + 5, 0);
guiCursorInfo = guiLoad("cursorinfo.gui", guiCursor.x + guiCursor.myWidth + 5, 0);

btnNew = guiGetObject(guiSaveLoad, 1);
btnLoad = guiGetObject(guiSaveLoad, 2);
btnExport = guiGetObject(guiSaveLoad, 3);
btnSave = guiGetObject(guiSaveLoad, 4);

cursor = instance_create(x, y, objCursor);

gridW = 24;
gridH = 24;

gridCellW = sprite_get_width(sprCell);
gridCellH = sprite_get_height(sprCell);

gridStartX = 17;
gridStartY = guiSaveLoad.myHeight + 20;

cell[gridW, gridH] = noone;
for (var __y = 0; __y &lt; gridH; __y++) {
    for (var __x = 0; __x &lt; gridW; __x++) {
        cell[__x, __y] = instance_create(
            gridStartX + __x * gridCellW, gridStartY + __y * gridCellH, objCell);
        cell[__x, __y].control = id;
    }
}

OBJECT_BUTTONS = 9;

for (var i = 0; i &lt; OBJECT_BUTTONS; i++) {
    btnCursor[i] = guiGetObject(guiCursor, i + 1);
    btnCursor[i].myText = getIndexName(i);
    btnCursor[i].cursorindex = i-1;
    btnCursor[i].number = 0;
}

filelastname = "mysticballoonlevel";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Buttons

if (guiCheckButton(btnSave)) {
    var fname = get_save_filename("Mystic Balloon Level|*.mbl",filelastname + ".mbl");
    
    if (fname != "") {
        levelSave(fname, cell, gridW, gridH);
    }
}

if (guiCheckButton(btnExport)) {
    var name = get_string("Enter the name of the level:", filelastname);
    if (name != "") {
        var fname = get_save_filename("Mystic Balloon Level Code|*.h",name + ".h");
        
        if (fname != "") {
            levelExport(fname, name, cell, gridW, gridH);
            filelastname = name;
        }
    }
}

if (guiCheckButton(btnNew))
{
    filelastname = "mysticballoonlevel";
    with objCell {
        solid = false;
        objIndex = -1;
    }
}

if (guiCheckButton(btnLoad)) {
    var fname = get_open_filename("Mystic Balloon Level|*.mbl",filelastname + ".mbl");
    
    if (fname != "") {
        levelLoad(fname, cell, gridW, gridH);
        filelastname = string_copy(fname, findLastSlash(fname), string_length(fname) - findLastSlash(fname) -  3);
    }
}

for (var i = 0; i &lt; OBJECT_BUTTONS; i++) {
    if (guiCheckButton(btnCursor[i])) {
        if (btnCursor[i].myText != "Unused" &amp;&amp; btnCursor[i].myText != "Unused ")
            cursor.type = i - 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update button text

var objectnumber;

for (var i = 1; i &lt; OBJECT_BUTTONS; i++) {
    objectnumber[i] = 0;
    with objCell {
        if (objIndex == i - 1) {
            objectnumber[i]++;
        }
    }
    
    if (objectnumber[i] != btnCursor[i].number) {
        btnCursor[i].number = objectnumber[i];
        btnCursor[i].myText = getIndexName(i) + " " + string(btnCursor[i].number);
        if (objectnumber[i] == maxPerIndex(i)) btnCursor[i].myTextCol = c_green;
        else if (objectnumber[i] &lt; maxPerIndex(i)) btnCursor[i].myTextCol = c_black;
        else btnCursor[i].myTextCol = c_red;
        btnCursor[i].myStateChange = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_rectangle(gridStartX - 1, gridStartY - 1,
 gridStartX + gridCellW * gridW - 1, gridStartY + gridCellH * gridH - 1, true);

draw_set_font(fontSmall);
draw_text(gridStartX + 15, gridStartY - 10,
    string(clamp(floor((mouse_x - gridStartX) / 24), 0, 23)) + ", " +
    string(clamp(floor((mouse_y - gridStartY) / 24), 0, 23)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
